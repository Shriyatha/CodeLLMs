{"id": "oop-hard-1", "title": "Polymorphism", "description": "Create a method `speak` in the `Person` class and override it in the `Student` class.", "complexity": "hard", "starter_code": "class Person:\n    def __init__(self, name):\n        self.name = name\n    \n    def speak(self):\n        return f'{self.name} says: Hello!'\n\nclass Student(Person):\n    def speak(self):\n        return f'{self.name} says: Hello, I am a student!'\n\nname = input()\ns = Student(name)\nprint(s.speak())", "visible_test_cases": [{"input": "Alice", "expected_output": "Alice says: Hello, I am a student!", "output": "Alice says: Hello, I am a student!"}], "hidden_test_cases": [{"input": "Bob", "expected_output": "Bob says: Hello, I am a student!", "output": "Bob says: Hello, I am a student!"}]}