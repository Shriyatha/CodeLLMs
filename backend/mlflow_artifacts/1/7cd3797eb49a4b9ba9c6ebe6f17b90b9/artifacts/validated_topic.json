{"id": "oop", "title": "Object-Oriented Programming", "description": "Classes, objects, inheritance, and polymorphism in JavaScript", "problems": [{"id": "oop-easy-1", "title": "Basic Class", "description": "Create a class `Person` with attributes `name` and `age`, and a method `introduce`.", "complexity": "easy", "starter_code": "class Person {\n  constructor(name, age) {\n    this.name = name;\n    this.age = age;\n  }\n  \n  introduce() {\n    console.log(`Hello, my name is ${this.name} and I am ${this.age} years old.`);\n  }\n}\n\nconst p = new Person('Alice', 30);\np.introduce();", "visible_test_cases": [{"input": "", "expected_output": "Hello, my name is Alice and I am 30 years old.", "output": "Hello, my name is Alice and I am 30 years old."}], "hidden_test_cases": [{"input": "", "expected_output": "Hello, my name is Bob and I am 25 years old.", "output": "Hello, my name is Bob and I am 25 years old."}]}, {"id": "oop-medium-1", "title": "Inheritance", "description": "Create a class `Student` that inherits from `Person` and adds a method `study`.", "complexity": "medium", "starter_code": "class Student extends Person {\n  study() {\n    console.log('I am studying.');\n  }\n}\n\nconst s = new Student('Alice', 20);\ns.introduce();\ns.study();", "visible_test_cases": [{"input": "", "expected_output": "Hello, my name is Alice and I am 20 years old.\nI am studying.", "output": "Hello, my name is Alice and I am 20 years old.\nI am studying."}], "hidden_test_cases": [{"input": "", "expected_output": "Hello, my name is Bob and I am 22 years old.\nI am studying.", "output": "Hello, my name is Bob and I am 22 years old.\nI am studying."}]}, {"id": "oop-hard-1", "title": "Polymorphism", "description": "Create a method `speak` in the `Person` class and override it in the `Student` class.", "complexity": "hard", "starter_code": "class Person {\n  speak() {\n    console.log(`${this.name} says: Hello!`);\n  }\n}\n\nclass Student extends Person {\n  speak() {\n    console.log(`${this.name} says: Hello, I am a student!`);\n  }\n}\n\nconst s = new Student('Alice', 20);\ns.speak();", "visible_test_cases": [{"input": "", "expected_output": "Alice says: Hello, I am a student!", "output": "Alice says: Hello, I am a student!"}], "hidden_test_cases": [{"input": "", "expected_output": "Bob says: Hello, I am a student!", "output": "Bob says: Hello, I am a student!"}]}]}