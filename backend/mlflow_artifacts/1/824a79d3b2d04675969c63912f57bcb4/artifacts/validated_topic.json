{"id": "io", "title": "Input/Output", "description": "Working with input and output operations in JavaScript", "problems": [{"id": "io-easy-1", "title": "Basic Input", "description": "Write a program that takes a name as input and prints a greeting.", "complexity": "easy", "starter_code": "const readline = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nreadline.question('Enter your name: ', name => {\n  console.log(`Hello, ${name}`);\n  readline.close();\n});", "visible_test_cases": [{"input": "Alice", "expected_output": "Hello, Alice", "output": "Hello, Alice"}], "hidden_test_cases": [{"input": "Bob", "expected_output": "Hello, Bob", "output": "Hello, Bob"}]}, {"id": "io-medium-1", "title": "File Operations", "description": "Write a program that reads a text file and counts the number of lines.", "complexity": "medium", "starter_code": "const fs = require('fs');\nconst filename = process.argv[2] || 'example.txt';\n\nfs.readFile(filename, 'utf8', (err, data) => {\n  if (err) {\n    console.error('Error reading file:', err);\n    return;\n  }\n  const lineCount = data.split('\\n').length;\n  console.log(lineCount);\n});", "visible_test_cases": [{"input": "file1.txt", "expected_output": "3", "output": "3"}], "hidden_test_cases": [{"input": "empty.txt", "expected_output": "0", "output": "0"}, {"input": "large.txt", "expected_output": "100", "output": "100"}]}, {"id": "io-hard-1", "title": "CSV Reader", "description": "Write a program that reads a CSV file and outputs the number of rows and columns.", "complexity": "hard", "starter_code": "const fs = require('fs');\nconst csv = require('csv-parser');\nconst filename = process.argv[2] || 'data.csv';\n\nlet rowCount = 0;\nlet colCount = 0;\n\nfs.createReadStream(filename)\n  .pipe(csv())\n  .on('data', (row) => {\n    rowCount++;\n    if (rowCount === 1) {\n      colCount = Object.keys(row).length;\n    }\n  })\n  .on('end', () => {\n    console.log(`Rows: ${rowCount}, Columns: ${colCount}`);\n  });", "visible_test_cases": [{"input": "data.csv", "expected_output": "Rows: 100, Columns: 5", "output": "Rows: 100, Columns: 5"}], "hidden_test_cases": [{"input": "large_data.csv", "expected_output": "Rows: 1000, Columns: 10", "output": "Rows: 1000, Columns: 10"}]}]}